|piano
CLOCK_27 => CLOCK_27.IN1
KEY[0] => KEY[0].IN1
KEY[1] => ~NO_FANOUT~
KEY[2] => ~NO_FANOUT~
KEY[3] => count2[0].CLK
KEY[3] => count2[1].CLK
SW[0] => WideOr0.IN0
SW[0] => Octave[0].DATAIN
SW[1] => WideOr0.IN1
SW[1] => Octave[1].DATAIN
SW[2] => WideOr0.IN2
SW[2] => Octave[2].DATAIN
SW[3] => WideOr0.IN3
SW[3] => Octave[3].DATAIN
SW[4] => WideOr0.IN4
SW[4] => Octave[4].DATAIN
SW[5] => WideOr0.IN5
SW[5] => Octave[5].DATAIN
SW[6] => WideOr0.IN6
SW[6] => Octave[6].DATAIN
SW[7] => WideOr0.IN7
SW[7] => Octave[7].DATAIN
I2C_SDAT <> i2c_codec_control:u1.port3
I2C_SCLK <= i2c_codec_control:u1.port2
AUD_ADCDAT => ~NO_FANOUT~
AUD_DACLRCK <= LRCK_1X.DB_MAX_OUTPUT_PORT_TYPE
AUD_DACDAT <= AUD_DACDAT.DB_MAX_OUTPUT_PORT_TYPE
AUD_BCLK <= AUD_BCLK~reg0.DB_MAX_OUTPUT_PORT_TYPE
AUD_ADCLRCK <= LRCK_1X.DB_MAX_OUTPUT_PORT_TYPE
AUD_XCK <= AUD_XCK~reg0.DB_MAX_OUTPUT_PORT_TYPE
LEDR[0] <= Octave[0].DB_MAX_OUTPUT_PORT_TYPE
LEDR[1] <= Octave[1].DB_MAX_OUTPUT_PORT_TYPE
LEDR[2] <= Octave[2].DB_MAX_OUTPUT_PORT_TYPE
LEDR[3] <= Octave[3].DB_MAX_OUTPUT_PORT_TYPE
LEDR[4] <= Octave[4].DB_MAX_OUTPUT_PORT_TYPE
LEDR[5] <= Octave[5].DB_MAX_OUTPUT_PORT_TYPE
LEDR[6] <= Octave[6].DB_MAX_OUTPUT_PORT_TYPE
LEDR[7] <= Octave[7].DB_MAX_OUTPUT_PORT_TYPE
LEDG[0] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
LEDG[1] <= count2[1].DB_MAX_OUTPUT_PORT_TYPE
LEDG[2] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
LEDG[3] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
LEDG[4] <= i2c_codec_control:u1.port4
LEDG[5] <= i2c_codec_control:u1.port4
LEDG[6] <= i2c_codec_control:u1.port4
LEDG[7] <= i2c_codec_control:u1.port4


|piano|i2c_codec_control:u1
iClK => mI2C_CLK_DIV[0].CLK
iClK => mI2C_CLK_DIV[1].CLK
iClK => mI2C_CLK_DIV[2].CLK
iClK => mI2C_CLK_DIV[3].CLK
iClK => mI2C_CLK_DIV[4].CLK
iClK => mI2C_CLK_DIV[5].CLK
iClK => mI2C_CLK_DIV[6].CLK
iClK => mI2C_CLK_DIV[7].CLK
iClK => mI2C_CLK_DIV[8].CLK
iClK => mI2C_CLK_DIV[9].CLK
iClK => mI2C_CLK_DIV[10].CLK
iClK => mI2C_CLK_DIV[11].CLK
iClK => mI2C_CLK_DIV[12].CLK
iClK => mI2C_CLK_DIV[13].CLK
iClK => mI2C_CLK_DIV[14].CLK
iClK => mI2C_CLK_DIV[15].CLK
iClK => mI2C_CTRL_CLK.CLK
iRST_N => mI2C_CLK_DIV[0].ACLR
iRST_N => mI2C_CLK_DIV[1].ACLR
iRST_N => mI2C_CLK_DIV[2].ACLR
iRST_N => mI2C_CLK_DIV[3].ACLR
iRST_N => mI2C_CLK_DIV[4].ACLR
iRST_N => mI2C_CLK_DIV[5].ACLR
iRST_N => mI2C_CLK_DIV[6].ACLR
iRST_N => mI2C_CLK_DIV[7].ACLR
iRST_N => mI2C_CLK_DIV[8].ACLR
iRST_N => mI2C_CLK_DIV[9].ACLR
iRST_N => mI2C_CLK_DIV[10].ACLR
iRST_N => mI2C_CLK_DIV[11].ACLR
iRST_N => mI2C_CLK_DIV[12].ACLR
iRST_N => mI2C_CLK_DIV[13].ACLR
iRST_N => mI2C_CLK_DIV[14].ACLR
iRST_N => mI2C_CLK_DIV[15].ACLR
iRST_N => mI2C_CTRL_CLK.ACLR
iRST_N => mI2C_GO.ACLR
iRST_N => LUT_INDEX[0]~reg0.ACLR
iRST_N => LUT_INDEX[1]~reg0.ACLR
iRST_N => LUT_INDEX[2]~reg0.ACLR
iRST_N => LUT_INDEX[3]~reg0.ACLR
iRST_N => SD_COUNT[0].PRESET
iRST_N => SD_COUNT[1].PRESET
iRST_N => SD_COUNT[2].PRESET
iRST_N => SD_COUNT[3].PRESET
iRST_N => SD_COUNT[4].PRESET
iRST_N => SD_COUNT[5].PRESET
iRST_N => mI2C_END.PRESET
iRST_N => ACK[0].ACLR
iRST_N => ACK[1].ACLR
iRST_N => ACK[2].ACLR
iRST_N => mI2C_SCLK.PRESET
iRST_N => mSetup_ST~6.DATAIN
I2C_SCLK <= comb.DB_MAX_OUTPUT_PORT_TYPE
LUT_INDEX[0] <= LUT_INDEX[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LUT_INDEX[1] <= LUT_INDEX[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LUT_INDEX[2] <= LUT_INDEX[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LUT_INDEX[3] <= LUT_INDEX[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE


